{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Floyd",
	"scopeName": "source.floyd",
	"patterns": [
		{
			"include": "#statement"
		},
		{
			"include": "#expression"
		}
	],
	"repository": {
		"statement": {
			"patterns": [
				
			]
		},
		"expression": {
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#literal"
				},
				{
					"include": "#string"
				},
				{
					"include": "#operator"
				},
				{
					"include": "#item-access"
				},
				{
					"include": "#list"
				},
				{
					"include": "#round-braces"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#builtin-functions"
				},
				{
					"include": "#builtin-types"
				},
				{
					"include": "#special-variables"
				},
				{
					"include": "#punctuation"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"include": "#comment-line"
				},
				{
					"include": "#comment-block"
				}
			]
		},
		"comment-line": {
			"patterns": [
				{
					"name": "comment.line.double-slash.floyd",
					"begin": "(//)",
					"end": "\\n",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.floyd"
						}
					},
					"patterns": [
						{
							"include": "#comment-line-continuation"
						},
						{
							"include": "#comment-tag"
						}
					]
				}
			]
		},
		"comment-block": {
			"patterns": [
				{
					"name": "comment.block.floyd",
					"begin": "(/\\*)",
					"end": "(\\*/)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.begin.floyd"
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.comment.end.floyd"
						}
					},
					"patterns": [
						{
							"include": "#comment-line-continuation"
						},
						{
							"include": "#comment-tag"
						}
					]
				}
			]
		},
		"comment-line-continuation": {
			"patterns": [
				{
					"name": "constant.character.floyd",
					"match": "\n"
				}
			]
		},
		"comment-tag": {
			"patterns": [
				{
					"name": "keyword.other.floyd",
					"match": "\\b(FIXME|TODO):"
				}
			]
		},
		"literal": {
			"patterns": [
				{
					"include": "#literal-constant"
				},
				{
					"include": "#literal-number"
				}
			]
		},
		"literal-constant": {
			"patterns": [
				{
					"name": "constant.language.floyd",
					"match": "\\bNULL\\b"
				}
			]
		},
		"literal-number": {
			"patterns": [
				{
					"name": "constant.numeric.floyd",
					"match": "\\b(([1-9][0-9]*)|0)\\b"
				}
			]
		},
		"string": {
			"patterns": [
				{
					"name": "string.quoted.double.floyd",
					"begin": "(\")",
					"end": "(\")",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.string.begin.floyd"
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.floyd"
						}
					},
					"patterns": [
						{
							"include": "#string-line-continuation"
						}
					]
				}
			]
		},
		"string-line-continuation": {
			"patterns": [
				{
					"name": "constant.character.floyd",
					"match": "\n"
				}
			]
		},
		"operator": {
			"patterns": [
				{
					"include": "#operator-logical"
				},
				{
					"include": "#operator-bitwise"
				},
				{
					"include": "#operator-arithmetic"
				},
				{
					"include": "#operator-comparison"
				},
				{
					"include": "#operator-assignment"
				},
				{
					"include": "#operator-ternary"
				}
			]
		},
		"operator-logical": {
			"patterns": [
				{
					"name": "keyword.operator.logical.floyd",
					"match": "(&&|!|\\|\\|)"
				}
			]
		},
		"operator-bitwise": {
			"patterns": [
				{
					"name": "keyword.operator.bitwise.floyd",
					"match": "(<<|>>|&|\\||~|\\^)"
				}
			]
		},
		"operator-arithmetic": {
			"patterns": [
				{
					"name": "keyword.operator.arithmetic.floyd",
					"match": "(\\+|-|/|\\*|\\+\\+|--|%)"
				}
			]
		},
		"operator-comparison": {
			"patterns": [
				{
					"name": "keyword.operator.comparison.floyd",
					"match": "(!=|==|>=|<=|<|>)"
				}
			]
		},
		"operator-assignment": {
			"patterns": [
				{
					"name": "keyword.operator.assignment.floyd",
					"match": "(=|\\+=|-=|/=|\\*=|%=)"
				}
			]
		},
		"operator-ternary": {
			"patterns": [
				{
					"comment": "a ? b : c"
				}
			]
		}
	}
}
